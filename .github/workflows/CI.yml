name: CI

# Trigger the workflow on push or pull request
on:
  push:
    branches:
      - main
  pull_request:

# the `concurrency` settings ensure that not too many CI jobs run in parallel
concurrency:
  # group by workflow and ref; the last slightly strange component ensures that for pull
  # requests, we limit to 1 concurrent job, but for the main branch we don't
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.ref != 'refs/heads/main' || github.run_number }}
  # Cancel intermediate builds, but only if it is a pull request build.
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  # The CI test job
  test:
    name: ${{ matrix.gap-branch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        gap-branch:
          - master
          - stable-4.15
          - stable-4.14
          - stable-4.13
          - stable-4.12
        pkgs-to-clone: 
          - datastructures NautyTracesInterface digraphs

    steps:
      - name: "Checkout package repository"
        uses: actions/checkout@v5
      - name: "Setup Python"
        uses: actions/setup-python@v5
      - name: "Install dot2tex dependencies"
        run: sudo apt install graphviz texlive preview-latex-style dot2tex
      - name: "Setup GAP"
        uses: gap-actions/setup-gap@v2
        with:
          GAP_PKGS_TO_CLONE: "${{ matrix.pkgs-to-clone }}"
          GAP_PKGS_TO_BUILD: "io orb profiling grape NautyTracesInterface datastructures digraphs"
          GAPBRANCH: ${{ matrix.gap-branch }}
      - name: "Build 'typeset' package"
        uses: gap-actions/build-pkg@v1
      - name: "Run 'typeset' package tests"
        uses: gap-actions/run-pkg-tests@v3
      - name: "Run 'typeset' package tests (with only needed packages loaded)"
        uses: gap-actions/run-pkg-tests@v3
        with:
          only-needed: true
      - name: "Process test coverage"
        uses: gap-actions/process-coverage@v2
      - name: "Publish code coverage"
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
